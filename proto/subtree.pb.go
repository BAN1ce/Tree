// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.24.3
// source: subtree.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QoS               int32  `protobuf:"varint,1,opt,name=QoS,proto3" json:"QoS,omitempty"`
	NoLocal           bool   `protobuf:"varint,2,opt,name=NoLocal,proto3" json:"NoLocal,omitempty"`
	RetainAsPublished bool   `protobuf:"varint,3,opt,name=RetainAsPublished,proto3" json:"RetainAsPublished,omitempty"`
	Share             bool   `protobuf:"varint,4,opt,name=Share,proto3" json:"Share,omitempty"`
	ShareName         string `protobuf:"bytes,5,opt,name=ShareName,proto3" json:"ShareName,omitempty"`
}

func (x *SubOption) Reset() {
	*x = SubOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subtree_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubOption) ProtoMessage() {}

func (x *SubOption) ProtoReflect() protoreflect.Message {
	mi := &file_subtree_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubOption.ProtoReflect.Descriptor instead.
func (*SubOption) Descriptor() ([]byte, []int) {
	return file_subtree_proto_rawDescGZIP(), []int{0}
}

func (x *SubOption) GetQoS() int32 {
	if x != nil {
		return x.QoS
	}
	return 0
}

func (x *SubOption) GetNoLocal() bool {
	if x != nil {
		return x.NoLocal
	}
	return false
}

func (x *SubOption) GetRetainAsPublished() bool {
	if x != nil {
		return x.RetainAsPublished
	}
	return false
}

func (x *SubOption) GetShare() bool {
	if x != nil {
		return x.Share
	}
	return false
}

func (x *SubOption) GetShareName() string {
	if x != nil {
		return x.ShareName
	}
	return ""
}

type TopicClientsID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clients map[string]*SubOption `protobuf:"bytes,1,rep,name=Clients,proto3" json:"Clients,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TopicClientsID) Reset() {
	*x = TopicClientsID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subtree_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicClientsID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicClientsID) ProtoMessage() {}

func (x *TopicClientsID) ProtoReflect() protoreflect.Message {
	mi := &file_subtree_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicClientsID.ProtoReflect.Descriptor instead.
func (*TopicClientsID) Descriptor() ([]byte, []int) {
	return file_subtree_proto_rawDescGZIP(), []int{1}
}

func (x *TopicClientsID) GetClients() map[string]*SubOption {
	if x != nil {
		return x.Clients
	}
	return nil
}

type TopicSubTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TreeRoot *TreeNode                  `protobuf:"bytes,1,opt,name=TreeRoot,proto3" json:"TreeRoot,omitempty"`
	Hash     map[string]*TopicClientsID `protobuf:"bytes,2,rep,name=Hash,proto3" json:"Hash,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TopicSubTree) Reset() {
	*x = TopicSubTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subtree_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicSubTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicSubTree) ProtoMessage() {}

func (x *TopicSubTree) ProtoReflect() protoreflect.Message {
	mi := &file_subtree_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicSubTree.ProtoReflect.Descriptor instead.
func (*TopicSubTree) Descriptor() ([]byte, []int) {
	return file_subtree_proto_rawDescGZIP(), []int{2}
}

func (x *TopicSubTree) GetTreeRoot() *TreeNode {
	if x != nil {
		return x.TreeRoot
	}
	return nil
}

func (x *TopicSubTree) GetHash() map[string]*TopicClientsID {
	if x != nil {
		return x.Hash
	}
	return nil
}

type TreeNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicSection string               `protobuf:"bytes,1,opt,name=TopicSection,proto3" json:"TopicSection,omitempty"`                                                                                   // topic section
	Topic        string               `protobuf:"bytes,2,opt,name=GetTopic,proto3" json:"GetTopic,omitempty"`                                                                                                 // full topic
	Clients      map[string]int32     `protobuf:"bytes,3,rep,name=Clients,proto3" json:"Clients,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`    // sub clients, key is clientID
	ChildNode    map[string]*TreeNode `protobuf:"bytes,4,rep,name=ChildNode,proto3" json:"ChildNode,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // child tree
}

func (x *TreeNode) Reset() {
	*x = TreeNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subtree_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeNode) ProtoMessage() {}

func (x *TreeNode) ProtoReflect() protoreflect.Message {
	mi := &file_subtree_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeNode.ProtoReflect.Descriptor instead.
func (*TreeNode) Descriptor() ([]byte, []int) {
	return file_subtree_proto_rawDescGZIP(), []int{3}
}

func (x *TreeNode) GetTopicSection() string {
	if x != nil {
		return x.TopicSection
	}
	return ""
}

func (x *TreeNode) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *TreeNode) GetClients() map[string]int32 {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *TreeNode) GetChildNode() map[string]*TreeNode {
	if x != nil {
		return x.ChildNode
	}
	return nil
}

type SubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topics   map[string]*SubOption `protobuf:"bytes,1,rep,name=Topics,proto3" json:"Topics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClientID string                `protobuf:"bytes,2,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
}

func (x *SubRequest) Reset() {
	*x = SubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subtree_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubRequest) ProtoMessage() {}

func (x *SubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subtree_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubRequest.ProtoReflect.Descriptor instead.
func (*SubRequest) Descriptor() ([]byte, []int) {
	return file_subtree_proto_rawDescGZIP(), []int{4}
}

func (x *SubRequest) GetTopics() map[string]*SubOption {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *SubRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

type SubResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topics map[string]*SubOption `protobuf:"bytes,1,rep,name=Topics,proto3" json:"Topics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SubResponse) Reset() {
	*x = SubResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subtree_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubResponse) ProtoMessage() {}

func (x *SubResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subtree_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubResponse.ProtoReflect.Descriptor instead.
func (*SubResponse) Descriptor() ([]byte, []int) {
	return file_subtree_proto_rawDescGZIP(), []int{5}
}

func (x *SubResponse) GetTopics() map[string]*SubOption {
	if x != nil {
		return x.Topics
	}
	return nil
}

type UnSubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topics   []string `protobuf:"bytes,1,rep,name=Topics,proto3" json:"Topics,omitempty"`
	ClientID string   `protobuf:"bytes,2,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
}

func (x *UnSubRequest) Reset() {
	*x = UnSubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subtree_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnSubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnSubRequest) ProtoMessage() {}

func (x *UnSubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subtree_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnSubRequest.ProtoReflect.Descriptor instead.
func (*UnSubRequest) Descriptor() ([]byte, []int) {
	return file_subtree_proto_rawDescGZIP(), []int{6}
}

func (x *UnSubRequest) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *UnSubRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

type UnSubResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topics map[string]int32 `protobuf:"bytes,1,rep,name=Topics,proto3" json:"Topics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *UnSubResponse) Reset() {
	*x = UnSubResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subtree_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnSubResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnSubResponse) ProtoMessage() {}

func (x *UnSubResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subtree_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnSubResponse.ProtoReflect.Descriptor instead.
func (*UnSubResponse) Descriptor() ([]byte, []int) {
	return file_subtree_proto_rawDescGZIP(), []int{7}
}

func (x *UnSubResponse) GetTopics() map[string]int32 {
	if x != nil {
		return x.Topics
	}
	return nil
}

var File_subtree_proto protoreflect.FileDescriptor

var file_subtree_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x75, 0x62, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x01, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x51, 0x6f, 0x53, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x51, 0x6f, 0x53, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x6f, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x4e, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x12, 0x2c, 0x0a, 0x11, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x41, 0x73, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x52, 0x65, 0x74,
	0x61, 0x69, 0x6e, 0x41, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x68, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x0e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x44, 0x12, 0x3c, 0x0a, 0x07, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x44, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0x4c, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xbe, 0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x75, 0x62, 0x54, 0x72,
	0x65, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x54, 0x72, 0x65, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x65,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x54, 0x72, 0x65, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12,
	0x31, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x75, 0x62, 0x54, 0x72,
	0x65, 0x65, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x48, 0x61,
	0x73, 0x68, 0x1a, 0x4e, 0x0a, 0x09, 0x48, 0x61, 0x73, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x44, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xc5, 0x02, 0x0a, 0x08, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x36, 0x0a, 0x07, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x3c, 0x0a, 0x09, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x65,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x1a,
	0x3a, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4d, 0x0a, 0x0e, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xac, 0x01, 0x0a, 0x0a, 0x53,
	0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x1a, 0x4b, 0x0a, 0x0b,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x92, 0x01, 0x0a, 0x0b, 0x53, 0x75,
	0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x73, 0x1a, 0x4b, 0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x42,
	0x0a, 0x0c, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x22, 0x84, 0x01, 0x0a, 0x0d, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x53,
	0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x1a, 0x39,
	0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_subtree_proto_rawDescOnce sync.Once
	file_subtree_proto_rawDescData = file_subtree_proto_rawDesc
)

func file_subtree_proto_rawDescGZIP() []byte {
	file_subtree_proto_rawDescOnce.Do(func() {
		file_subtree_proto_rawDescData = protoimpl.X.CompressGZIP(file_subtree_proto_rawDescData)
	})
	return file_subtree_proto_rawDescData
}

var file_subtree_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_subtree_proto_goTypes = []interface{}{
	(*SubOption)(nil),      // 0: proto.SubOption
	(*TopicClientsID)(nil), // 1: proto.TopicClientsID
	(*TopicSubTree)(nil),   // 2: proto.TopicSubTree
	(*TreeNode)(nil),       // 3: proto.TreeNode
	(*SubRequest)(nil),     // 4: proto.SubRequest
	(*SubResponse)(nil),    // 5: proto.SubResponse
	(*UnSubRequest)(nil),   // 6: proto.UnSubRequest
	(*UnSubResponse)(nil),  // 7: proto.UnSubResponse
	nil,                    // 8: proto.TopicClientsID.ClientsEntry
	nil,                    // 9: proto.TopicSubTree.HashEntry
	nil,                    // 10: proto.TreeNode.ClientsEntry
	nil,                    // 11: proto.TreeNode.ChildNodeEntry
	nil,                    // 12: proto.SubRequest.TopicsEntry
	nil,                    // 13: proto.SubResponse.TopicsEntry
	nil,                    // 14: proto.UnSubResponse.TopicsEntry
}
var file_subtree_proto_depIdxs = []int32{
	8,  // 0: proto.TopicClientsID.Clients:type_name -> proto.TopicClientsID.ClientsEntry
	3,  // 1: proto.TopicSubTree.TreeRoot:type_name -> proto.TreeNode
	9,  // 2: proto.TopicSubTree.Hash:type_name -> proto.TopicSubTree.HashEntry
	10, // 3: proto.TreeNode.Clients:type_name -> proto.TreeNode.ClientsEntry
	11, // 4: proto.TreeNode.ChildNode:type_name -> proto.TreeNode.ChildNodeEntry
	12, // 5: proto.SubRequest.Topics:type_name -> proto.SubRequest.TopicsEntry
	13, // 6: proto.SubResponse.Topics:type_name -> proto.SubResponse.TopicsEntry
	14, // 7: proto.UnSubResponse.Topics:type_name -> proto.UnSubResponse.TopicsEntry
	0,  // 8: proto.TopicClientsID.ClientsEntry.value:type_name -> proto.SubOption
	1,  // 9: proto.TopicSubTree.HashEntry.value:type_name -> proto.TopicClientsID
	3,  // 10: proto.TreeNode.ChildNodeEntry.value:type_name -> proto.TreeNode
	0,  // 11: proto.SubRequest.TopicsEntry.value:type_name -> proto.SubOption
	0,  // 12: proto.SubResponse.TopicsEntry.value:type_name -> proto.SubOption
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_subtree_proto_init() }
func file_subtree_proto_init() {
	if File_subtree_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_subtree_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subtree_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicClientsID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subtree_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicSubTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subtree_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subtree_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subtree_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subtree_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnSubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subtree_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnSubResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_subtree_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_subtree_proto_goTypes,
		DependencyIndexes: file_subtree_proto_depIdxs,
		MessageInfos:      file_subtree_proto_msgTypes,
	}.Build()
	File_subtree_proto = out.File
	file_subtree_proto_rawDesc = nil
	file_subtree_proto_goTypes = nil
	file_subtree_proto_depIdxs = nil
}
